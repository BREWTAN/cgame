package starstart.cgame.flows.mysqlgens.trade.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
public class LandProdQueryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    protected List<Criteria> oredCriteria;

    protected int offset;

    protected int limit;

    protected String sumCol;

    protected String groupSelClause;

    protected String groupByClause;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    public LandProdQueryExample() {
        oredCriteria = new ArrayList<Criteria>();
        offset = 0;
        limit = Integer.MAX_VALUE;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        this.offset= 0;
        this.limit= Integer.MAX_VALUE;
        this.sumCol=null;
        this.groupSelClause=null;
        this.groupByClause=null;
    }

    public void setOffset(int offset) {
         this.offset = offset;
    }

    public int getOffset() {
          return offset;
    }

    public void setLimit(int limit) {
         this.limit = limit;
    }

    public int getLimit() {
          return limit;
    }

    public void setSumCol(String sumCol) {
         this.sumCol = sumCol;
    }

    public String getSumCol() {
          return sumCol;
    }

    public void setGroupSelClause(String groupSelClause) {
         this.groupSelClause = groupSelClause;
    }

    public String getGroupSelClause() {
          return groupSelClause;
    }

    public void setGroupByClause(String groupByClause) {
         this.groupByClause = groupByClause;
    }

    public String getGroupByClause() {
          return groupByClause;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    @Data
    public abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        public GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        public void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        public void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        public void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andProdIdIsNull() {
            addCriterion("PROD_ID is null");
            return (Criteria) this;
        }

        public Criteria andProdIdIsNotNull() {
            addCriterion("PROD_ID is not null");
            return (Criteria) this;
        }

        public Criteria andProdIdEqualTo(String value) {
            addCriterion("PROD_ID =", value, "prodId");
            return (Criteria) this;
        }

        public Criteria andProdIdNotEqualTo(String value) {
            addCriterion("PROD_ID <>", value, "prodId");
            return (Criteria) this;
        }

        public Criteria andProdIdGreaterThan(String value) {
            addCriterion("PROD_ID >", value, "prodId");
            return (Criteria) this;
        }

        public Criteria andProdIdGreaterThanOrEqualTo(String value) {
            addCriterion("PROD_ID >=", value, "prodId");
            return (Criteria) this;
        }

        public Criteria andProdIdLessThan(String value) {
            addCriterion("PROD_ID <", value, "prodId");
            return (Criteria) this;
        }

        public Criteria andProdIdLessThanOrEqualTo(String value) {
            addCriterion("PROD_ID <=", value, "prodId");
            return (Criteria) this;
        }

        public Criteria andProdIdLike(String value) {
            addCriterion("PROD_ID like", value, "prodId");
            return (Criteria) this;
        }

        public Criteria andProdIdNotLike(String value) {
            addCriterion("PROD_ID not like", value, "prodId");
            return (Criteria) this;
        }

        public Criteria andProdIdIn(List<String> values) {
            addCriterion("PROD_ID in", values, "prodId");
            return (Criteria) this;
        }

        public Criteria andProdIdNotIn(List<String> values) {
            addCriterion("PROD_ID not in", values, "prodId");
            return (Criteria) this;
        }

        public Criteria andProdIdBetween(String value1, String value2) {
            addCriterion("PROD_ID between", value1, value2, "prodId");
            return (Criteria) this;
        }

        public Criteria andProdIdNotBetween(String value1, String value2) {
            addCriterion("PROD_ID not between", value1, value2, "prodId");
            return (Criteria) this;
        }

        public Criteria andPordDesc1IsNull() {
            addCriterion("PORD_DESC1 is null");
            return (Criteria) this;
        }

        public Criteria andPordDesc1IsNotNull() {
            addCriterion("PORD_DESC1 is not null");
            return (Criteria) this;
        }

        public Criteria andPordDesc1EqualTo(String value) {
            addCriterion("PORD_DESC1 =", value, "pordDesc1");
            return (Criteria) this;
        }

        public Criteria andPordDesc1NotEqualTo(String value) {
            addCriterion("PORD_DESC1 <>", value, "pordDesc1");
            return (Criteria) this;
        }

        public Criteria andPordDesc1GreaterThan(String value) {
            addCriterion("PORD_DESC1 >", value, "pordDesc1");
            return (Criteria) this;
        }

        public Criteria andPordDesc1GreaterThanOrEqualTo(String value) {
            addCriterion("PORD_DESC1 >=", value, "pordDesc1");
            return (Criteria) this;
        }

        public Criteria andPordDesc1LessThan(String value) {
            addCriterion("PORD_DESC1 <", value, "pordDesc1");
            return (Criteria) this;
        }

        public Criteria andPordDesc1LessThanOrEqualTo(String value) {
            addCriterion("PORD_DESC1 <=", value, "pordDesc1");
            return (Criteria) this;
        }

        public Criteria andPordDesc1Like(String value) {
            addCriterion("PORD_DESC1 like", value, "pordDesc1");
            return (Criteria) this;
        }

        public Criteria andPordDesc1NotLike(String value) {
            addCriterion("PORD_DESC1 not like", value, "pordDesc1");
            return (Criteria) this;
        }

        public Criteria andPordDesc1In(List<String> values) {
            addCriterion("PORD_DESC1 in", values, "pordDesc1");
            return (Criteria) this;
        }

        public Criteria andPordDesc1NotIn(List<String> values) {
            addCriterion("PORD_DESC1 not in", values, "pordDesc1");
            return (Criteria) this;
        }

        public Criteria andPordDesc1Between(String value1, String value2) {
            addCriterion("PORD_DESC1 between", value1, value2, "pordDesc1");
            return (Criteria) this;
        }

        public Criteria andPordDesc1NotBetween(String value1, String value2) {
            addCriterion("PORD_DESC1 not between", value1, value2, "pordDesc1");
            return (Criteria) this;
        }

        public Criteria andPordDesc2IsNull() {
            addCriterion("PORD_DESC2 is null");
            return (Criteria) this;
        }

        public Criteria andPordDesc2IsNotNull() {
            addCriterion("PORD_DESC2 is not null");
            return (Criteria) this;
        }

        public Criteria andPordDesc2EqualTo(String value) {
            addCriterion("PORD_DESC2 =", value, "pordDesc2");
            return (Criteria) this;
        }

        public Criteria andPordDesc2NotEqualTo(String value) {
            addCriterion("PORD_DESC2 <>", value, "pordDesc2");
            return (Criteria) this;
        }

        public Criteria andPordDesc2GreaterThan(String value) {
            addCriterion("PORD_DESC2 >", value, "pordDesc2");
            return (Criteria) this;
        }

        public Criteria andPordDesc2GreaterThanOrEqualTo(String value) {
            addCriterion("PORD_DESC2 >=", value, "pordDesc2");
            return (Criteria) this;
        }

        public Criteria andPordDesc2LessThan(String value) {
            addCriterion("PORD_DESC2 <", value, "pordDesc2");
            return (Criteria) this;
        }

        public Criteria andPordDesc2LessThanOrEqualTo(String value) {
            addCriterion("PORD_DESC2 <=", value, "pordDesc2");
            return (Criteria) this;
        }

        public Criteria andPordDesc2Like(String value) {
            addCriterion("PORD_DESC2 like", value, "pordDesc2");
            return (Criteria) this;
        }

        public Criteria andPordDesc2NotLike(String value) {
            addCriterion("PORD_DESC2 not like", value, "pordDesc2");
            return (Criteria) this;
        }

        public Criteria andPordDesc2In(List<String> values) {
            addCriterion("PORD_DESC2 in", values, "pordDesc2");
            return (Criteria) this;
        }

        public Criteria andPordDesc2NotIn(List<String> values) {
            addCriterion("PORD_DESC2 not in", values, "pordDesc2");
            return (Criteria) this;
        }

        public Criteria andPordDesc2Between(String value1, String value2) {
            addCriterion("PORD_DESC2 between", value1, value2, "pordDesc2");
            return (Criteria) this;
        }

        public Criteria andPordDesc2NotBetween(String value1, String value2) {
            addCriterion("PORD_DESC2 not between", value1, value2, "pordDesc2");
            return (Criteria) this;
        }

        public Criteria andUpdDateIsNull() {
            addCriterion("UPD_DATE is null");
            return (Criteria) this;
        }

        public Criteria andUpdDateIsNotNull() {
            addCriterion("UPD_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andUpdDateEqualTo(Date value) {
            addCriterion("UPD_DATE =", value, "updDate");
            return (Criteria) this;
        }

        public Criteria andUpdDateNotEqualTo(Date value) {
            addCriterion("UPD_DATE <>", value, "updDate");
            return (Criteria) this;
        }

        public Criteria andUpdDateGreaterThan(Date value) {
            addCriterion("UPD_DATE >", value, "updDate");
            return (Criteria) this;
        }

        public Criteria andUpdDateGreaterThanOrEqualTo(Date value) {
            addCriterion("UPD_DATE >=", value, "updDate");
            return (Criteria) this;
        }

        public Criteria andUpdDateLessThan(Date value) {
            addCriterion("UPD_DATE <", value, "updDate");
            return (Criteria) this;
        }

        public Criteria andUpdDateLessThanOrEqualTo(Date value) {
            addCriterion("UPD_DATE <=", value, "updDate");
            return (Criteria) this;
        }

        public Criteria andUpdDateIn(List<Date> values) {
            addCriterion("UPD_DATE in", values, "updDate");
            return (Criteria) this;
        }

        public Criteria andUpdDateNotIn(List<Date> values) {
            addCriterion("UPD_DATE not in", values, "updDate");
            return (Criteria) this;
        }

        public Criteria andUpdDateBetween(Date value1, Date value2) {
            addCriterion("UPD_DATE between", value1, value2, "updDate");
            return (Criteria) this;
        }

        public Criteria andUpdDateNotBetween(Date value1, Date value2) {
            addCriterion("UPD_DATE not between", value1, value2, "updDate");
            return (Criteria) this;
        }

        public Criteria andProdIdLikeInsensitive(String value) {
            addCriterion("upper(PROD_ID) like", value.toUpperCase(), "prodId");
            return (Criteria) this;
        }

        public Criteria andPordDesc1LikeInsensitive(String value) {
            addCriterion("upper(PORD_DESC1) like", value.toUpperCase(), "pordDesc1");
            return (Criteria) this;
        }

        public Criteria andPordDesc2LikeInsensitive(String value) {
            addCriterion("upper(PORD_DESC2) like", value.toUpperCase(), "pordDesc2");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated do_not_delete_during_merge Mon Jun 08 20:40:12 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        public Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_LAND_PROD_QUERY
     *
     * @mbggenerated Mon Jun 08 20:40:12 CST 2015
     */
    @Data
    @NoArgsConstructor
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        public Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        public Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        public Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        public Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        public Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}