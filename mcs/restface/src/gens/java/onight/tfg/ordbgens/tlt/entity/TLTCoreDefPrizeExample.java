package onight.tfg.ordbgens.tlt.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
public class TLTCoreDefPrizeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    protected List<Criteria> oredCriteria;

    protected int offset;

    protected int limit;

    protected String sumCol;

    protected String groupSelClause;

    protected boolean forUpdate;

    protected String groupByClause;

    String selectCols;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    public TLTCoreDefPrizeExample() {
        oredCriteria = new ArrayList<Criteria>();
        offset = 0;
        limit = Integer.MAX_VALUE;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        this.offset= 0;
        this.limit= Integer.MAX_VALUE;
        this.sumCol=null;
        this.groupSelClause=null;
        this.groupByClause=null;
        this.forUpdate=false;
    }

    public void setOffset(int offset) {
         this.offset = offset;
    }

    public int getOffset() {
          return offset;
    }

    public void setLimit(int limit) {
         this.limit = limit;
    }

    public int getLimit() {
          return limit;
    }

    public void setSumCol(String sumCol) {
         this.sumCol = sumCol;
    }

    public String getSumCol() {
          return sumCol;
    }

    public void setGroupSelClause(String groupSelClause) {
         this.groupSelClause = groupSelClause;
    }

    public String getGroupSelClause() {
          return groupSelClause;
    }

    public void setForUpdate(boolean forUpdate) {
         this.forUpdate = forUpdate;
    }

    public boolean isForUpdate() {
          return forUpdate;
    }

    public void setGroupByClause(String groupByClause) {
         this.groupByClause = groupByClause;
    }

    public String getGroupByClause() {
          return groupByClause;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    @Data
    public abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        public GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        public void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        public void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        public void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUuidIsNull() {
            addCriterion("UUID is null");
            return (Criteria) this;
        }

        public Criteria andUuidIsNotNull() {
            addCriterion("UUID is not null");
            return (Criteria) this;
        }

        public Criteria andUuidEqualTo(String value) {
            addCriterion("UUID =", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotEqualTo(String value) {
            addCriterion("UUID <>", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidGreaterThan(String value) {
            addCriterion("UUID >", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidGreaterThanOrEqualTo(String value) {
            addCriterion("UUID >=", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLessThan(String value) {
            addCriterion("UUID <", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLessThanOrEqualTo(String value) {
            addCriterion("UUID <=", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLike(String value) {
            addCriterion("UUID like", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotLike(String value) {
            addCriterion("UUID not like", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidIn(List<String> values) {
            addCriterion("UUID in", values, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotIn(List<String> values) {
            addCriterion("UUID not in", values, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidBetween(String value1, String value2) {
            addCriterion("UUID between", value1, value2, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotBetween(String value1, String value2) {
            addCriterion("UUID not between", value1, value2, "uuid");
            return (Criteria) this;
        }

        public Criteria andCatalogIsNull() {
            addCriterion("CATALOG is null");
            return (Criteria) this;
        }

        public Criteria andCatalogIsNotNull() {
            addCriterion("CATALOG is not null");
            return (Criteria) this;
        }

        public Criteria andCatalogEqualTo(String value) {
            addCriterion("CATALOG =", value, "catalog");
            return (Criteria) this;
        }

        public Criteria andCatalogNotEqualTo(String value) {
            addCriterion("CATALOG <>", value, "catalog");
            return (Criteria) this;
        }

        public Criteria andCatalogGreaterThan(String value) {
            addCriterion("CATALOG >", value, "catalog");
            return (Criteria) this;
        }

        public Criteria andCatalogGreaterThanOrEqualTo(String value) {
            addCriterion("CATALOG >=", value, "catalog");
            return (Criteria) this;
        }

        public Criteria andCatalogLessThan(String value) {
            addCriterion("CATALOG <", value, "catalog");
            return (Criteria) this;
        }

        public Criteria andCatalogLessThanOrEqualTo(String value) {
            addCriterion("CATALOG <=", value, "catalog");
            return (Criteria) this;
        }

        public Criteria andCatalogLike(String value) {
            addCriterion("CATALOG like", value, "catalog");
            return (Criteria) this;
        }

        public Criteria andCatalogNotLike(String value) {
            addCriterion("CATALOG not like", value, "catalog");
            return (Criteria) this;
        }

        public Criteria andCatalogIn(List<String> values) {
            addCriterion("CATALOG in", values, "catalog");
            return (Criteria) this;
        }

        public Criteria andCatalogNotIn(List<String> values) {
            addCriterion("CATALOG not in", values, "catalog");
            return (Criteria) this;
        }

        public Criteria andCatalogBetween(String value1, String value2) {
            addCriterion("CATALOG between", value1, value2, "catalog");
            return (Criteria) this;
        }

        public Criteria andCatalogNotBetween(String value1, String value2) {
            addCriterion("CATALOG not between", value1, value2, "catalog");
            return (Criteria) this;
        }

        public Criteria andLtypeIsNull() {
            addCriterion("LTYPE is null");
            return (Criteria) this;
        }

        public Criteria andLtypeIsNotNull() {
            addCriterion("LTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andLtypeEqualTo(String value) {
            addCriterion("LTYPE =", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeNotEqualTo(String value) {
            addCriterion("LTYPE <>", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeGreaterThan(String value) {
            addCriterion("LTYPE >", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeGreaterThanOrEqualTo(String value) {
            addCriterion("LTYPE >=", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeLessThan(String value) {
            addCriterion("LTYPE <", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeLessThanOrEqualTo(String value) {
            addCriterion("LTYPE <=", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeLike(String value) {
            addCriterion("LTYPE like", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeNotLike(String value) {
            addCriterion("LTYPE not like", value, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeIn(List<String> values) {
            addCriterion("LTYPE in", values, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeNotIn(List<String> values) {
            addCriterion("LTYPE not in", values, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeBetween(String value1, String value2) {
            addCriterion("LTYPE between", value1, value2, "ltype");
            return (Criteria) this;
        }

        public Criteria andLtypeNotBetween(String value1, String value2) {
            addCriterion("LTYPE not between", value1, value2, "ltype");
            return (Criteria) this;
        }

        public Criteria andPlayTypeIsNull() {
            addCriterion("PLAY_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andPlayTypeIsNotNull() {
            addCriterion("PLAY_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andPlayTypeEqualTo(String value) {
            addCriterion("PLAY_TYPE =", value, "playType");
            return (Criteria) this;
        }

        public Criteria andPlayTypeNotEqualTo(String value) {
            addCriterion("PLAY_TYPE <>", value, "playType");
            return (Criteria) this;
        }

        public Criteria andPlayTypeGreaterThan(String value) {
            addCriterion("PLAY_TYPE >", value, "playType");
            return (Criteria) this;
        }

        public Criteria andPlayTypeGreaterThanOrEqualTo(String value) {
            addCriterion("PLAY_TYPE >=", value, "playType");
            return (Criteria) this;
        }

        public Criteria andPlayTypeLessThan(String value) {
            addCriterion("PLAY_TYPE <", value, "playType");
            return (Criteria) this;
        }

        public Criteria andPlayTypeLessThanOrEqualTo(String value) {
            addCriterion("PLAY_TYPE <=", value, "playType");
            return (Criteria) this;
        }

        public Criteria andPlayTypeLike(String value) {
            addCriterion("PLAY_TYPE like", value, "playType");
            return (Criteria) this;
        }

        public Criteria andPlayTypeNotLike(String value) {
            addCriterion("PLAY_TYPE not like", value, "playType");
            return (Criteria) this;
        }

        public Criteria andPlayTypeIn(List<String> values) {
            addCriterion("PLAY_TYPE in", values, "playType");
            return (Criteria) this;
        }

        public Criteria andPlayTypeNotIn(List<String> values) {
            addCriterion("PLAY_TYPE not in", values, "playType");
            return (Criteria) this;
        }

        public Criteria andPlayTypeBetween(String value1, String value2) {
            addCriterion("PLAY_TYPE between", value1, value2, "playType");
            return (Criteria) this;
        }

        public Criteria andPlayTypeNotBetween(String value1, String value2) {
            addCriterion("PLAY_TYPE not between", value1, value2, "playType");
            return (Criteria) this;
        }

        public Criteria andWinLevelIsNull() {
            addCriterion("WIN_LEVEL is null");
            return (Criteria) this;
        }

        public Criteria andWinLevelIsNotNull() {
            addCriterion("WIN_LEVEL is not null");
            return (Criteria) this;
        }

        public Criteria andWinLevelEqualTo(String value) {
            addCriterion("WIN_LEVEL =", value, "winLevel");
            return (Criteria) this;
        }

        public Criteria andWinLevelNotEqualTo(String value) {
            addCriterion("WIN_LEVEL <>", value, "winLevel");
            return (Criteria) this;
        }

        public Criteria andWinLevelGreaterThan(String value) {
            addCriterion("WIN_LEVEL >", value, "winLevel");
            return (Criteria) this;
        }

        public Criteria andWinLevelGreaterThanOrEqualTo(String value) {
            addCriterion("WIN_LEVEL >=", value, "winLevel");
            return (Criteria) this;
        }

        public Criteria andWinLevelLessThan(String value) {
            addCriterion("WIN_LEVEL <", value, "winLevel");
            return (Criteria) this;
        }

        public Criteria andWinLevelLessThanOrEqualTo(String value) {
            addCriterion("WIN_LEVEL <=", value, "winLevel");
            return (Criteria) this;
        }

        public Criteria andWinLevelLike(String value) {
            addCriterion("WIN_LEVEL like", value, "winLevel");
            return (Criteria) this;
        }

        public Criteria andWinLevelNotLike(String value) {
            addCriterion("WIN_LEVEL not like", value, "winLevel");
            return (Criteria) this;
        }

        public Criteria andWinLevelIn(List<String> values) {
            addCriterion("WIN_LEVEL in", values, "winLevel");
            return (Criteria) this;
        }

        public Criteria andWinLevelNotIn(List<String> values) {
            addCriterion("WIN_LEVEL not in", values, "winLevel");
            return (Criteria) this;
        }

        public Criteria andWinLevelBetween(String value1, String value2) {
            addCriterion("WIN_LEVEL between", value1, value2, "winLevel");
            return (Criteria) this;
        }

        public Criteria andWinLevelNotBetween(String value1, String value2) {
            addCriterion("WIN_LEVEL not between", value1, value2, "winLevel");
            return (Criteria) this;
        }

        public Criteria andRegionIsNull() {
            addCriterion("REGION is null");
            return (Criteria) this;
        }

        public Criteria andRegionIsNotNull() {
            addCriterion("REGION is not null");
            return (Criteria) this;
        }

        public Criteria andRegionEqualTo(String value) {
            addCriterion("REGION =", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotEqualTo(String value) {
            addCriterion("REGION <>", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionGreaterThan(String value) {
            addCriterion("REGION >", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionGreaterThanOrEqualTo(String value) {
            addCriterion("REGION >=", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionLessThan(String value) {
            addCriterion("REGION <", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionLessThanOrEqualTo(String value) {
            addCriterion("REGION <=", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionLike(String value) {
            addCriterion("REGION like", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotLike(String value) {
            addCriterion("REGION not like", value, "region");
            return (Criteria) this;
        }

        public Criteria andRegionIn(List<String> values) {
            addCriterion("REGION in", values, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotIn(List<String> values) {
            addCriterion("REGION not in", values, "region");
            return (Criteria) this;
        }

        public Criteria andRegionBetween(String value1, String value2) {
            addCriterion("REGION between", value1, value2, "region");
            return (Criteria) this;
        }

        public Criteria andRegionNotBetween(String value1, String value2) {
            addCriterion("REGION not between", value1, value2, "region");
            return (Criteria) this;
        }

        public Criteria andDivisionIsNull() {
            addCriterion("DIVISION is null");
            return (Criteria) this;
        }

        public Criteria andDivisionIsNotNull() {
            addCriterion("DIVISION is not null");
            return (Criteria) this;
        }

        public Criteria andDivisionEqualTo(String value) {
            addCriterion("DIVISION =", value, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionNotEqualTo(String value) {
            addCriterion("DIVISION <>", value, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionGreaterThan(String value) {
            addCriterion("DIVISION >", value, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionGreaterThanOrEqualTo(String value) {
            addCriterion("DIVISION >=", value, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionLessThan(String value) {
            addCriterion("DIVISION <", value, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionLessThanOrEqualTo(String value) {
            addCriterion("DIVISION <=", value, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionLike(String value) {
            addCriterion("DIVISION like", value, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionNotLike(String value) {
            addCriterion("DIVISION not like", value, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionIn(List<String> values) {
            addCriterion("DIVISION in", values, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionNotIn(List<String> values) {
            addCriterion("DIVISION not in", values, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionBetween(String value1, String value2) {
            addCriterion("DIVISION between", value1, value2, "division");
            return (Criteria) this;
        }

        public Criteria andDivisionNotBetween(String value1, String value2) {
            addCriterion("DIVISION not between", value1, value2, "division");
            return (Criteria) this;
        }

        public Criteria andWonboardsIsNull() {
            addCriterion("WONBOARDS is null");
            return (Criteria) this;
        }

        public Criteria andWonboardsIsNotNull() {
            addCriterion("WONBOARDS is not null");
            return (Criteria) this;
        }

        public Criteria andWonboardsEqualTo(BigDecimal value) {
            addCriterion("WONBOARDS =", value, "wonboards");
            return (Criteria) this;
        }

        public Criteria andWonboardsNotEqualTo(BigDecimal value) {
            addCriterion("WONBOARDS <>", value, "wonboards");
            return (Criteria) this;
        }

        public Criteria andWonboardsGreaterThan(BigDecimal value) {
            addCriterion("WONBOARDS >", value, "wonboards");
            return (Criteria) this;
        }

        public Criteria andWonboardsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("WONBOARDS >=", value, "wonboards");
            return (Criteria) this;
        }

        public Criteria andWonboardsLessThan(BigDecimal value) {
            addCriterion("WONBOARDS <", value, "wonboards");
            return (Criteria) this;
        }

        public Criteria andWonboardsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("WONBOARDS <=", value, "wonboards");
            return (Criteria) this;
        }

        public Criteria andWonboardsIn(List<BigDecimal> values) {
            addCriterion("WONBOARDS in", values, "wonboards");
            return (Criteria) this;
        }

        public Criteria andWonboardsNotIn(List<BigDecimal> values) {
            addCriterion("WONBOARDS not in", values, "wonboards");
            return (Criteria) this;
        }

        public Criteria andWonboardsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("WONBOARDS between", value1, value2, "wonboards");
            return (Criteria) this;
        }

        public Criteria andWonboardsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("WONBOARDS not between", value1, value2, "wonboards");
            return (Criteria) this;
        }

        public Criteria andWinAmountIsNull() {
            addCriterion("WIN_AMOUNT is null");
            return (Criteria) this;
        }

        public Criteria andWinAmountIsNotNull() {
            addCriterion("WIN_AMOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andWinAmountEqualTo(BigDecimal value) {
            addCriterion("WIN_AMOUNT =", value, "winAmount");
            return (Criteria) this;
        }

        public Criteria andWinAmountNotEqualTo(BigDecimal value) {
            addCriterion("WIN_AMOUNT <>", value, "winAmount");
            return (Criteria) this;
        }

        public Criteria andWinAmountGreaterThan(BigDecimal value) {
            addCriterion("WIN_AMOUNT >", value, "winAmount");
            return (Criteria) this;
        }

        public Criteria andWinAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("WIN_AMOUNT >=", value, "winAmount");
            return (Criteria) this;
        }

        public Criteria andWinAmountLessThan(BigDecimal value) {
            addCriterion("WIN_AMOUNT <", value, "winAmount");
            return (Criteria) this;
        }

        public Criteria andWinAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("WIN_AMOUNT <=", value, "winAmount");
            return (Criteria) this;
        }

        public Criteria andWinAmountIn(List<BigDecimal> values) {
            addCriterion("WIN_AMOUNT in", values, "winAmount");
            return (Criteria) this;
        }

        public Criteria andWinAmountNotIn(List<BigDecimal> values) {
            addCriterion("WIN_AMOUNT not in", values, "winAmount");
            return (Criteria) this;
        }

        public Criteria andWinAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("WIN_AMOUNT between", value1, value2, "winAmount");
            return (Criteria) this;
        }

        public Criteria andWinAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("WIN_AMOUNT not between", value1, value2, "winAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountIsNull() {
            addCriterion("BONUS_AMOUNT is null");
            return (Criteria) this;
        }

        public Criteria andBonusAmountIsNotNull() {
            addCriterion("BONUS_AMOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andBonusAmountEqualTo(BigDecimal value) {
            addCriterion("BONUS_AMOUNT =", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountNotEqualTo(BigDecimal value) {
            addCriterion("BONUS_AMOUNT <>", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountGreaterThan(BigDecimal value) {
            addCriterion("BONUS_AMOUNT >", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("BONUS_AMOUNT >=", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountLessThan(BigDecimal value) {
            addCriterion("BONUS_AMOUNT <", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("BONUS_AMOUNT <=", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountIn(List<BigDecimal> values) {
            addCriterion("BONUS_AMOUNT in", values, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountNotIn(List<BigDecimal> values) {
            addCriterion("BONUS_AMOUNT not in", values, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BONUS_AMOUNT between", value1, value2, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BONUS_AMOUNT not between", value1, value2, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andPriorityIsNull() {
            addCriterion("PRIORITY is null");
            return (Criteria) this;
        }

        public Criteria andPriorityIsNotNull() {
            addCriterion("PRIORITY is not null");
            return (Criteria) this;
        }

        public Criteria andPriorityEqualTo(Integer value) {
            addCriterion("PRIORITY =", value, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityNotEqualTo(Integer value) {
            addCriterion("PRIORITY <>", value, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityGreaterThan(Integer value) {
            addCriterion("PRIORITY >", value, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityGreaterThanOrEqualTo(Integer value) {
            addCriterion("PRIORITY >=", value, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityLessThan(Integer value) {
            addCriterion("PRIORITY <", value, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityLessThanOrEqualTo(Integer value) {
            addCriterion("PRIORITY <=", value, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityIn(List<Integer> values) {
            addCriterion("PRIORITY in", values, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityNotIn(List<Integer> values) {
            addCriterion("PRIORITY not in", values, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityBetween(Integer value1, Integer value2) {
            addCriterion("PRIORITY between", value1, value2, "priority");
            return (Criteria) this;
        }

        public Criteria andPriorityNotBetween(Integer value1, Integer value2) {
            addCriterion("PRIORITY not between", value1, value2, "priority");
            return (Criteria) this;
        }

        public Criteria andInserttimeIsNull() {
            addCriterion("INSERTTIME is null");
            return (Criteria) this;
        }

        public Criteria andInserttimeIsNotNull() {
            addCriterion("INSERTTIME is not null");
            return (Criteria) this;
        }

        public Criteria andInserttimeEqualTo(Date value) {
            addCriterion("INSERTTIME =", value, "inserttime");
            return (Criteria) this;
        }

        public Criteria andInserttimeNotEqualTo(Date value) {
            addCriterion("INSERTTIME <>", value, "inserttime");
            return (Criteria) this;
        }

        public Criteria andInserttimeGreaterThan(Date value) {
            addCriterion("INSERTTIME >", value, "inserttime");
            return (Criteria) this;
        }

        public Criteria andInserttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("INSERTTIME >=", value, "inserttime");
            return (Criteria) this;
        }

        public Criteria andInserttimeLessThan(Date value) {
            addCriterion("INSERTTIME <", value, "inserttime");
            return (Criteria) this;
        }

        public Criteria andInserttimeLessThanOrEqualTo(Date value) {
            addCriterion("INSERTTIME <=", value, "inserttime");
            return (Criteria) this;
        }

        public Criteria andInserttimeIn(List<Date> values) {
            addCriterion("INSERTTIME in", values, "inserttime");
            return (Criteria) this;
        }

        public Criteria andInserttimeNotIn(List<Date> values) {
            addCriterion("INSERTTIME not in", values, "inserttime");
            return (Criteria) this;
        }

        public Criteria andInserttimeBetween(Date value1, Date value2) {
            addCriterion("INSERTTIME between", value1, value2, "inserttime");
            return (Criteria) this;
        }

        public Criteria andInserttimeNotBetween(Date value1, Date value2) {
            addCriterion("INSERTTIME not between", value1, value2, "inserttime");
            return (Criteria) this;
        }

        public Criteria andUuidLikeInsensitive(String value) {
            addCriterion("upper(UUID) like", value.toUpperCase(), "uuid");
            return (Criteria) this;
        }

        public Criteria andCatalogLikeInsensitive(String value) {
            addCriterion("upper(CATALOG) like", value.toUpperCase(), "catalog");
            return (Criteria) this;
        }

        public Criteria andLtypeLikeInsensitive(String value) {
            addCriterion("upper(LTYPE) like", value.toUpperCase(), "ltype");
            return (Criteria) this;
        }

        public Criteria andPlayTypeLikeInsensitive(String value) {
            addCriterion("upper(PLAY_TYPE) like", value.toUpperCase(), "playType");
            return (Criteria) this;
        }

        public Criteria andWinLevelLikeInsensitive(String value) {
            addCriterion("upper(WIN_LEVEL) like", value.toUpperCase(), "winLevel");
            return (Criteria) this;
        }

        public Criteria andRegionLikeInsensitive(String value) {
            addCriterion("upper(REGION) like", value.toUpperCase(), "region");
            return (Criteria) this;
        }

        public Criteria andDivisionLikeInsensitive(String value) {
            addCriterion("upper(DIVISION) like", value.toUpperCase(), "division");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated do_not_delete_during_merge Sat Apr 16 13:41:09 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        public Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TLT_CORE_DEF_PRIZE
     *
     * @mbggenerated Sat Apr 16 13:41:09 CST 2016
     */
    @Data
    @NoArgsConstructor
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        public Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        public Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        public Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        public Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        public Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}